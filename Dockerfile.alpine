#
# baseimage-gui Dockerfile
#
# https://github.com/jlesage/docker-baseimage-gui
#

# Pull base image.
FROM ${BASEIMAGE}

# Define software versions.
ARG LIBVNCSERVER_VERSION=0.9.11
ARG X11VNC_VERSION=0.9.14-fixes
ARG NOVNC_VERSION=0.6.2-fixes
ARG S6_OVERLAY_VERSION=1.19.1.1
ARG BOOTSTRAP_VERSION=3.3.7
ARG FONTAWESOME_VERSION=4.7.0
ARG JQUERY_VERSION=3.2.1
ARG JQUERY_UI_TOUCH_PUNCH_VERSION=master

# Define software download URLs.
ARG LIBVNCSERVER_URL=https://github.com/jlesage/libvncserver/archive/LibVNCServer-${LIBVNCSERVER_VERSION}-fixes.tar.gz
ARG X11VNC_URL=https://github.com/jlesage/x11vnc/archive/${X11VNC_VERSION}.tar.gz
ARG NOVNC_URL=https://github.com/jlesage/novnc/archive/v${NOVNC_VERSION}.tar.gz
ARG S6_OVERLAY_URL=https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz
ARG BOOTSTRAP_URL=https://github.com/twbs/bootstrap/releases/download/v${BOOTSTRAP_VERSION}/bootstrap-${BOOTSTRAP_VERSION}-dist.zip
ARG FONTAWESOME_URL=http://fontawesome.io/assets/font-awesome-${FONTAWESOME_VERSION}.zip
ARG JQUERY_URL=https://code.jquery.com/jquery-${JQUERY_VERSION}.min.js
ARG JQUERY_UI_TOUCH_PUNCH_URL=https://raw.github.com/furf/jquery-ui-touch-punch/${JQUERY_UI_TOUCH_PUNCH_VERSION}/jquery.ui.touch-punch.min.js

# Define working directory.
WORKDIR /tmp

# Install s6 overlay.
RUN \
    apk --no-cache add --virtual build-dependencies curl && \
    curl -sS -L ${S6_OVERLAY_URL} | tar -xz -C / && \
    # Cleanup
    apk --no-cache del build-dependencies

# Install system packages.
RUN \
    apk --no-cache add \
        # For timezone support
        tzdata \
        # For 'groupmod' command
        shadow

# Compile x11vnc.
RUN \
    apk --no-cache add --virtual build-dependencies \
            curl \
            build-base \
            autoconf \
            automake \
            libtool \
            libx11-dev \
            libxtst-dev \
            libjpeg-turbo-dev \
            libpng-dev \
            libxinerama-dev \
            libxdamage-dev \
            libxcomposite-dev \
            libxcursor-dev \
            libxrandr-dev \
            libxfixes-dev \
            libice-dev \
            openssl-dev && \
    # Download sources
    curl -sS -L ${LIBVNCSERVER_URL} | tar -xz && \
    curl -sS -L ${X11VNC_URL} | tar -xz && \
    # Compile libvncserver
    cd libvncserver-LibVNCServer-${LIBVNCSERVER_VERSION}-fixes && \
    ./autogen.sh --prefix=/tmp/install && \
    make install && \
    cd .. && \
    # Compile x11vnc
    cd x11vnc-${X11VNC_VERSION} && \
    autoreconf -v --install && \
    PKG_CONFIG_PATH=/tmp/install/lib/pkgconfig/ ./configure --prefix=/tmp/install --with-websockets && \
    make install && \
    cd .. && \
    # Install libraries
    cp -P install/lib/libvncserver.so* /usr/lib/ && \
    cp -P install/lib/libvncclient.so* /usr/lib/ && \
    # Install binaries
    cp install/bin/x11vnc /usr/bin/ && \
    # Cleanup
    apk --no-cache del build-dependencies && \
    rm -rf /tmp/*

# Install packages.
RUN \
    apk --no-cache add \
        # x11vnc dependencies
        libssl1.0 \
        libxtst \
        libxi \
        libjpeg-turbo \
        libxcomposite \
        # X virtual framebuffer display server
        xvfb \
        # Openbox window manager
        openbox \
        xsetroot \
        font-bitstream-100dpi

# Install noVNC.
RUN \
    apk --no-cache add --virtual build-dependencies curl nodejs && \
    curl -sS -L ${NOVNC_URL} | tar -xz && \
    mkdir -p /opt/novnc/include && \
    mkdir -p /opt/novnc/js && \
    mkdir -p /opt/novnc/css && \
    NOVNC_CORE="\
        noVNC-${NOVNC_VERSION}/include/util.js \
        noVNC-${NOVNC_VERSION}/include/webutil.js \
        noVNC-${NOVNC_VERSION}/include/base64.js \
        noVNC-${NOVNC_VERSION}/include/websock.js \
        noVNC-${NOVNC_VERSION}/include/des.js \
        noVNC-${NOVNC_VERSION}/include/keysymdef.js \
        noVNC-${NOVNC_VERSION}/include/keyboard.js \
        noVNC-${NOVNC_VERSION}/include/input.js \
        noVNC-${NOVNC_VERSION}/include/display.js \
        noVNC-${NOVNC_VERSION}/include/rfb.js \
        noVNC-${NOVNC_VERSION}/include/keysym.js \
        noVNC-${NOVNC_VERSION}/include/inflator.js \
    " && \
    cp -v $NOVNC_CORE /opt/novnc/include/ && \
    # Minify noVNC core JS files
    npm install uglify-js source-map && \
    ./node_modules/uglify-js/bin/uglifyjs \
        --compress --mangle --source-map \
        --output /opt/novnc/js/novnc-core.min.js -- $NOVNC_CORE && \
    npm uninstall uglify-js && \
    sed -i "s/noVNC-${NOVNC_VERSION}//g" /opt/novnc/js/novnc-core.min.js.map && \
    echo -e "\n//# sourceMappingURL=/js/novnc-core.min.js.map" >> /opt/novnc/js/novnc-core.min.js && \
    # Install Bootstrap
    curl -sS -L -O ${BOOTSTRAP_URL} && \
    unzip bootstrap-${BOOTSTRAP_VERSION}-dist.zip && \
    cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/css/bootstrap.min.css /opt/novnc/css/ && \
    cp -v bootstrap-${BOOTSTRAP_VERSION}-dist/js/bootstrap.min.js /opt/novnc/js/ && \
    # Install Font Awesome
    curl -sS -L -O ${FONTAWESOME_URL} && \
    unzip font-awesome-${FONTAWESOME_VERSION}.zip && \
    cp -vr font-awesome-${FONTAWESOME_VERSION}/fonts /opt/novnc/ && \
    cp -v font-awesome-${FONTAWESOME_VERSION}/css/font-awesome.min.css /opt/novnc/css/ && \
    # Install JQuery
    curl -sS -L -o /opt/novnc/js/jquery.min.js ${JQUERY_URL} && \
    curl -sS -L -o /opt/novnc/js/jquery.ui.touch-punch.min.js ${JQUERY_UI_TOUCH_PUNCH_URL} && \
    # Cleanup
    apk --no-cache del build-dependencies && \
    rm -rf /tmp/*

# Add files.
COPY rootfs/ /

# Set version to CSS and JavaScript file URLs.
RUN sed -i "s/UNIQUE_VERSION/$(date | md5sum | cut -c1-10)/g" /opt/novnc/index.vnc

# Minify noVNC UI JS files
RUN \
    apk --no-cache add --virtual build-dependencies nodejs && \
    NOVNC_UI="\
        /opt/novnc/app/modulemgr.js \
        /opt/novnc/app/ui.js \
        /opt/novnc/app/modules/hideablenavbar.js \
        /opt/novnc/app/modules/dynamicappname.js \
        /opt/novnc/app/modules/password.js \
        /opt/novnc/app/modules/clipboard.js \
        /opt/novnc/app/modules/autoscaling.js \
        /opt/novnc/app/modules/clipping.js \
        /opt/novnc/app/modules/viewportdrag.js \
        /opt/novnc/app/modules/fullscreen.js \
        /opt/novnc/app/modules/virtualkeyboard.js \
        /opt/novnc/app/modules/rightclick.js \
    " && \
    npm install uglify-js && \
    ./node_modules/uglify-js/bin/uglifyjs \
        --compress --mangle --source-map \
        --output /opt/novnc/js/novnc-ui.min.js -- $NOVNC_UI && \
    npm uninstall uglify-js && \
    echo -e "\n//# sourceMappingURL=/js/novnc-ui.min.js.map" >> /opt/novnc/js/novnc-ui.min.js && \
    sed -i 's/\/opt\/novnc//g' /opt/novnc/js/novnc-ui.min.js.map && \
    # Cleanup
    apk --no-cache del build-dependencies && \
    rm -rf /tmp/*

# Generate and install favicons.
RUN \
    APP_ICON_URL=https://github.com/jlesage/docker-templates/raw/master/jlesage/images/generic-app-icon.png && \
    /opt/install_app_icon.sh "$APP_ICON_URL"

# Set environment variables.
ENV HOME=/home/guiapp \
    S6_BEHAVIOUR_IF_STAGE2_FAILS=3 \
    USER_ID=1000 \
    GROUP_ID=1000 \
    APP_NAME=DockerApp \
    DISPLAY=:0 \
    DISPLAY_WIDTH=1024 \
    DISPLAY_HEIGHT=768

# Define mountable directories.
VOLUME ["/config"]

# Expose ports.
#   - 5800: VNC web interface
#   - 9500: VNC
EXPOSE 5800 9500

# Define default command.
# Use S6 overlay init system.
CMD ["/init"]

# Metadata.
LABEL \
      org.label-schema.name="baseimage-gui" \
      org.label-schema.description="A minimal docker baseimage to ease creation of X graphical application containers" \
      org.label-schema.version="unknown" \
      org.label-schema.vcs-url="https://github.com/jlesage/docker-baseimage-gui" \
      org.label-schema.schema-version="1.0"
