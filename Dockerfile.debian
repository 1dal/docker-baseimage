#
# baseimage Dockerfile
#
# https://github.com/jlesage/docker-baseimage
#

# Pull base image.
FROM ${BASEIMAGE}

# Define software versions.
ARG S6_OVERLAY_VERSION=1.19.1.1

# Define software download URLs.
ARG S6_OVERLAY_URL=https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz

# Variables needed for package installation via APT.
ARG DEBIAN_FRONTEND=noninteractive
ARG TERM=xterm

# Define working directory.
WORKDIR /tmp

# Install s6 overlay.
RUN \
    BUILD_PACKAGES="curl ca-certificates" && \
    apt-get update && apt-get install -y --no-install-recommends \
        $BUILD_PACKAGES && \
    curl -sS -L -o s6-overlay.tar.gz ${S6_OVERLAY_URL} && \
    # Workaround for some distro where '/bin' being a symlink to '/usr/bin':
    # extract the tarball in two steps.
    if [ -L /bin ]; then \
        tar xzf s6-overlay.tar.gz -C / --exclude="./bin" && \
        tar xzf /tmp/s6-overlay.tar.gz -C /usr ./bin; \
    else \
        tar xzf s6-overlay.tar.gz -C /; \
    fi && \
    # Add the '-s' option to s6-svscan to use our signal handlers.
    sed -i.bak 's|^s6-svscan -t0 /var/run/s6/services$|s6-svscan -s -t0 /var/run/s6/services|' /etc/s6/init-catchall/init-stage1 && \
        rm /etc/s6/init-catchall/init-stage1.bak && \
    sed -i.bak 's|^s6-svscan -t0 /var/run/s6/services$|s6-svscan -s -t0 /var/run/s6/services|' /etc/s6/init-no-catchall/init-stage1 && \
        rm /etc/s6/init-no-catchall/init-stage1.bak && \
    # Add support for pre-finish scripts.
    sed -i.bak 's|forx i { "fix-attrs.d" "cont-init.d" "cont-finish.d" "services.d" }|forx i { "fix-attrs.d" "cont-init.d" "cont-finish.d" "cont-prefinish.d" "services.d" }|' /etc/s6/init/init-stage2 && \
        rm /etc/s6/init/init-stage2.bak && \
    # Cleanup
    apt-get clean && \
    apt-get purge -y $BUILD_PACKAGES && \
    apt-get --purge autoremove -y && \
    rm -rf /var/lib/apt/lists/* \
           /var/tmp/* \
           /tmp/*

# Make sure VERSION_CODENAME is set in /etc/os-release.
RUN \
    if ! grep -q "^VERSION_CODENAME=" /etc/os-release; then \
        apt-get update && apt-get install -y --no-install-recommends lsb-release && \
        echo "VERSION_CODENAME=$(lsb_release -c -s)" >> /etc/os-release && \
        apt-get clean && \
        apt-get purge -y lsb-release && \
        apt-get --purge autoremove -y && \
        rm -rf /var/lib/apt/lists/* \
             /var/tmp/* \
             /tmp/*; \
    fi

# Add files.
COPY rootfs/ /

# Set environment variables.
ENV S6_BEHAVIOUR_IF_STAGE2_FAILS=3 \
    USER_ID=1000 \
    GROUP_ID=1000 \
    APP_NAME=DockerApp \
    APP_USER=app \
    HOME=/home/${APP_USER}

# Define mountable directories.
VOLUME ["/config"]

# Define default command.
# Use S6 overlay init system.
CMD ["/init"]

# Metadata.
LABEL \
      org.label-schema.name="baseimage" \
      org.label-schema.description="A minimal docker baseimage to ease creation of long-lived application containers" \
      org.label-schema.version="unknown" \
      org.label-schema.vcs-url="https://github.com/jlesage/docker-baseimage" \
      org.label-schema.schema-version="1.0"
