#
# baseimage-gui Dockerfile
#
# https://github.com/jlesage/docker-baseimage-gui
#

# Pull base image.
FROM ${BASEIMAGE}

# Define software versions.
ARG LIBVNCSERVER_VERSION=0.9.11
ARG X11VNC_VERSION=0.9.14
ARG NOVNC_VERSION=0.6.2
ARG S6_OVERLAY_VERSION=1.19.1.1

# Define software download URLs.
ARG LIBVNCSERVER_URL=https://github.com/jlesage/libvncserver/archive/LibVNCServer-${LIBVNCSERVER_VERSION}-fixes.tar.gz
ARG X11VNC_URL=https://github.com/LibVNC/x11vnc/archive/${X11VNC_VERSION}.tar.gz
ARG NOVNC_URL=https://github.com/novnc/novnc/archive/v${NOVNC_VERSION}.tar.gz
ARG S6_OVERLAY_URL=https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-amd64.tar.gz

# Variables needed for package installation via APT.
ARG DEBIAN_FRONTEND=noninteractive
ARG TERM=xterm

# Define working directory.
WORKDIR /tmp

# Install s6 overlay.
RUN \
    BUILD_PACKAGES="curl ca-certificates" && \
    apt-get update && apt-get install -y --no-install-recommends \
        $BUILD_PACKAGES && \
    curl -sS -L -o s6-overlay.tar.gz ${S6_OVERLAY_URL} && \
    # Workaround for some distro where '/bin' being a symlink to '/usr/bin':
    # extract the tarball in two steps.
    if [ -L /bin ]; then \
        tar xzf s6-overlay.tar.gz -C / --exclude="./bin" && \
        tar xzf /tmp/s6-overlay.tar.gz -C /usr ./bin; \
    else \
        tar xzf s6-overlay.tar.gz -C /; \
    fi && \
    # Cleanup
    apt-get clean && \
    apt-get purge -y $BUILD_PACKAGES && \
    apt-get --purge autoremove -y && \
    rm -rf /var/lib/apt/lists/* \
           /var/tmp/* \
           /tmp/*

# Compile x11vnc.
RUN \
    BUILD_PACKAGES="curl \
                    ca-certificates \
                    build-essential \
                    autoconf \
                    automake \
                    libtool \
                    pkg-config \
                    libjpeg8-dev \
                    libpng16-dev \
                    zlib1g-dev \
                    libssl-dev \
                    libx11-dev \
                    libxtst-dev \
                    libxext-dev \
                    libxdamage-dev \
                    libxinerama-dev \
                    libxfixes-dev \
                    libxcomposite-dev \
                    libxcursor-dev \
                    libxrandr-dev \
                    libice-dev \
                   " && \
    apt-get update && apt-get install -y --no-install-recommends \
        $BUILD_PACKAGES && \
    # Download sources
    curl -sS -L ${LIBVNCSERVER_URL} | tar -xz && \
    curl -sS -L ${X11VNC_URL} | tar -xz && \
    # Compile libvncserver
    cd libvncserver-LibVNCServer-${LIBVNCSERVER_VERSION}-fixes && \
    ./autogen.sh --prefix=/tmp/install && \
    make install && \
    cd .. && \
    # Compile x11vnc
    cd x11vnc-${X11VNC_VERSION} && \
    autoreconf -v --install && \
    PKG_CONFIG_PATH=/tmp/install/lib/pkgconfig/ ./configure --prefix=/tmp/install --with-websockets && \
    make install && \
    cd .. && \
    # Install libraries
    cp -P install/lib/libvncserver.so* /usr/lib/ && \
    cp -P install/lib/libvncclient.so* /usr/lib/ && \
    # Install binaries
    cp install/bin/x11vnc /usr/bin/ && \
    # Cleanup
    apt-get clean && \
    apt-get purge -y $BUILD_PACKAGES && \
    apt-get --purge autoremove -y && \
    rm -rf /var/lib/apt/lists/* \
           /var/tmp/* \
           /tmp/*

# Install packages.
RUN \
    apt-get update && apt-get install -y --no-install-recommends \
        # X11 VNC server dependencies
        libssl1.0.0 \
        libxtst6 \
        libxcomposite1 \
        libpng16-16 \
        # X virtual framebuffer display server
        xvfb \
        # Openbox window manager
        openbox \ 
        # For ifconfig
        net-tools \
        && \
    # Cleanup
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* \
           /var/tmp/* \
           /tmp/*

# Install noVNC.
RUN \
    BUILD_PACKAGES="curl ca-certificates patch" && \
    apt-get update && apt-get install -y --no-install-recommends \
        $BUILD_PACKAGES && \
    curl -sS -L ${NOVNC_URL} | tar -xz && \
    mkdir -p /opt/novnc && \
    cp -R noVNC-${NOVNC_VERSION}/favicon.ico \
          noVNC-${NOVNC_VERSION}/images \
          noVNC-${NOVNC_VERSION}/include \
          /opt/novnc/ && \
    CURDIR="$(pwd)" && cd / && \
    # Apply patch: register mouse click events even if touch is available.
    curl -sS -L https://gist.githubusercontent.com/jlesage/e30c298dbb2c4dd3fe086cdf8aad6ed1/raw/1cef9daf07730a3ae0635fe3532dd8883e3a5610/input.js.patch | patch -p0 && \
    cd "$CURDIR" && \
    # Cleanup
    apt-get clean && \
    apt-get purge -y $BUILD_PACKAGES && \
    apt-get --purge autoremove -y && \
    rm -rf /var/lib/apt/lists/* \
           /var/tmp/* \
           /tmp/*

# Add files.
COPY rootfs/ /

# Set environment variables.
ENV HOME=/home/guiapp \
    S6_BEHAVIOUR_IF_STAGE2_FAILS=3 \
    USER_ID=1000 \
    GROUP_ID=1000 \
    APP_NAME=DockerApp \
    DISPLAY=:0 \
    DISPLAY_WIDTH=1024 \
    DISPLAY_HEIGHT=768

# Define mountable directories.
VOLUME ["/config"]

# Expose ports.
#   - 5800: VNC web interface
#   - 9500: VNC
EXPOSE 5800 9500

# Define default command.
# Use S6 overlay init system.
CMD ["/init"]

# Metadata.
LABEL \
      org.label-schema.name="baseimage-gui" \
      org.label-schema.description="A minimal docker baseimage to ease creation of X graphical application containers" \
      org.label-schema.version="unknown" \
      org.label-schema.vcs-url="https://github.com/jlesage/docker-baseimage-gui" \
      org.label-schema.schema-version="1.0"
